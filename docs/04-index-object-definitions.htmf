<!-- <h1 class="display-none" id="sec:object-definitions">3 Object Definitions<a class="headerlink" href="04-index-object-definitions.html#sec:object-definitions" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h1> -->

<h2 id="sec:general-notation">3.1 General Notation<a class="headerlink" href="04-index-object-definitions.html#sec:general-notation" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h2>

<p>Parameter names use a hierarchical form similar to a directory tree. The
name of a particular Parameter is represented by the concatenation of
each successive node in the hierarchy separated with a &ldquo;.&rdquo; (dot),
starting at the trunk of the hierarchy and leading to the leaves. When
specifying a partial path, indicating an intermediate node in the
hierarchy, the trailing &ldquo;.&rdquo; (dot) is always used as the last character.</p>

<p>Parameter names MUST be treated as case sensitive. The name of each node
in the hierarchy MUST start with a letter or underscore, and subsequent
characters MUST be letters, digits, underscores or hyphens. The terms
&ldquo;letter&rdquo; and &ldquo;digit&rdquo; are as defined in the XML
specification <span class="cite" data-citation-ids="XML"><a href='05-index-normative-references.html#ref-XML' title=''>[Appendix B/1]</a></span>.</p>

<p>Hyphens can easily be confused with the discretionary hyphens that are
sometimes inserted by hyphenation algorithms. For this reason, the names
of nodes in the hierarchy SHOULD NOT include any hyphens. Additionally,
the names of nodes in the hierarchy SHOULD NOT start with underscores.
In BBF standards, the names of nodes in the hierarchy always start with
an upper-case letter and never include any hyphens or underscores (see
<a href='08-index-requirements-for-bbf-standard-data-models.html#sec:data-model-item-names' title='' class="heading">C.3.1</a> for the corresponding normative requirement).</p>

<p>Where multiple instances of an object can occur, the placeholder node
name {i} is shown. In actual use, this placeholder is to be replaced by
an Instance Identifier.</p>

<h2 id="sec:data-types-and-representation">3.2 Data Types and Representation<a class="headerlink" href="04-index-object-definitions.html#sec:data-types-and-representation" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h2>

<p>Parameters make use of a limited subset of the default SOAP data types.
The supported data types are defined by the DM Schema and are
also listed in <a href='06-index-cwmp-data-model-definition-xml-schema.html#sec:data-types' title='' class="heading">A.2.3</a>.</p>

<p>The named data types that specify the representations of IP addresses,
MAC addresses etc., are defined in a DM Instance document (see <a href='06-index-cwmp-data-model-definition-xml-schema.html#sec:cwmp-data-model-definition-xml-schema' title='' class="heading">Annex A</a>).
The XML file with those definitions and the corresponding HTML file can
be found in the <a href='https://cwmp-data-models.broadband-forum.org/#Data%20Model%20Data%20Types' title=''>data model resources
page</a>.
Note that this DM Instance defines named data types that are expected to
be used in several data model definitions; it is possible to define
local named data types in any DM Instance document.</p>

<p>The following sub-sections specify additional rules governing parameter
value representation within XML documents.</p>

<h3 id="sec:date-and-time-rules">3.2.1 Date and Time Rules<a class="headerlink" href="04-index-object-definitions.html#sec:date-and-time-rules" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h3>

<p>All times MUST be expressed in UTC (Universal Coordinated Time) unless
explicitly stated otherwise in the definition of a parameter of this
type.</p>

<p>If absolute time is not available to the Agent, it SHOULD instead
indicate the relative time since boot, where the boot time is assumed to
be the beginning of the first day of January of year 1, or <code>0001 01 01T00:00:00</code>. For example, 2 days, 3 hours, 4 minutes and 5 seconds since
boot would be expressed as <code>0001 01 03T03:04:05</code>. Relative time since boot
MUST be expressed using an untimezoned representation. Any untimezoned
value with a year value less than 1000 MUST be interpreted as a relative
time since boot.</p>

<p>If the time is unknown or not applicable, the following value
representing &ldquo;Unknown Time&rdquo; MUST be used: <code>0001-01-01T00:00:00Z</code>. For an
infinite timeline, the following value representing &ldquo;Infinite Time&rdquo; MUST
be used: <code>9999-12-31T23:59:59Z</code>.</p>

<p>Any dateTime value other than one expressing relative time since boot
(as described above) MUST use UTC timezoned representation (that is, it
MUST include a timezone suffix of &ldquo;<code>Z</code>&rdquo;, &ldquo;<code>-00:00</code>&rdquo; or &ldquo;<code>+00:00</code>&rdquo;).</p>

<h3 id="sec:comma-separated-lists">3.2.2 Comma-separated Lists<a class="headerlink" href="04-index-object-definitions.html#sec:comma-separated-lists" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h3>

<p>For strings that are defined to contain comma-separated lists, the
format is defined as follows. Between every pair of successive items in
a comma-separated list there MUST be a separator. The separator MUST
include exactly one comma character, and MAY also include one or more
whitespace characters before or after the comma. The entire separator,
including any whitespace characters, MUST NOT be considered part of the
list items it separates. The last item in a comma-separated list MUST
NOT be followed with a separator. Individual items in a comma-separated
list MUST NOT include a whitespace or comma character within them. Any
whitespace or comma characters within an item value MUST be escaped
using percent-encoding as specified in RFC 3986 <span class="cite" data-citation-ids="RFC3986"><a href='05-index-normative-references.html#ref-RFC3986' title=''>[2.1/5]</a></span>.</p>

<p>It is possible to create a list of lists, although other solutions
SHOULD be preferred when possible. If a string contains a list of lists,
the rules of the previous paragraph imply that the comma separators of
the inner list will be percent encoded. For example, a three element
list with elements &ldquo;a&rdquo;, &ldquo;b,c&rdquo; (a two element list) and &ldquo;d&rdquo; could be
represented as &ldquo;a,b%2Cc,d&rdquo;. In order to avoid the need to percent encode
the inner separators, inner lists MAY be &ldquo;protected&rdquo; by placing them
within square brackets, e.g. the above list could be represented as
&ldquo;a,[b,c],d&rdquo;. In order to avoid ambiguity (a Controller that didn’t
understand the new syntax would interpret &ldquo;a,[b,c],d&rdquo; as the four
element list &ldquo;a&rdquo;, &ldquo;[b”, ”c]&rdquo;, &ldquo;d&rdquo;), the data type and/or parameter
definition MUST explicitly state that the new syntax is supported
(<a href='06-index-cwmp-data-model-definition-xml-schema.html#sec:named-data-types' title='' class="heading">A.2.3.1</a>, <a href='06-index-cwmp-data-model-definition-xml-schema.html#sec:parameter-syntax' title='' class="heading">A.2.7.1</a>).</p>

<h3 id="sec:parameters-that-reference-parameters-or-objects">3.2.3 Parameters that Reference Parameters or Objects<a class="headerlink" href="04-index-object-definitions.html#sec:parameters-that-reference-parameters-or-objects" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h3>

<p>For string parameters that are defined to contain the hierarchical Path
Name of an object (or for each item in parameters that are defined to
contain comma-separated lists of object Path Names), the representation
of the object name MUST NOT include a trailing &ldquo;dot.&rdquo; An example of a
parameter of this kind in the TR-181i2 <span class="cite" data-citation-ids="TR-181i2"><a href='05-index-normative-references.html#ref-TR-181i2' title=''>[10]</a></span> Device:2 data model is
Device.InterfaceStack.{i}.LowerLayer. For this parameter, the following
is an example of a properly formed value:</p>

<p><code>Device.Ethernet.Interface.1</code></p>

<p>Path Names in parameter values MUST always be full Path Names. For CWMP
there is an exception such that a path that begins with a dot is
relative to the Root or Service Object. For example, in the Device Root
Object, a parameter value of &ldquo;.DeviceInfo&rdquo; always means
&ldquo;Device.DeviceInfo&rdquo;. NOTE: This exception does NOT hold for USP.</p>

<p>In order to be able to use reference parameters as unique keys
(<a href='06-index-cwmp-data-model-definition-xml-schema.html#sec:tables' title='' class="heading">A.2.10.1</a>), their Path Names MUST conceptually be converted to full Path
Names before being compared. For example, in the Device Root Object,
&ldquo;.DeviceInfo.&rdquo; and &ldquo;Device.DeviceInfo.&rdquo; would compare as equal. If a
reference parameter is list-valued, i.e. it is a list of Path Names or
Instance Numbers, the parameter value MUST conceptually be regarded as a
set when being compared, i.e. the comparison has to ignore the item
order and any repeated items. For example, &ldquo;1,2,1&rdquo; and &ldquo;2,1&rdquo; would
compare as equal because both reference instances 1 and 2.</p>

<p>References are defined as strong or weak in the data model. A strong
reference always either references an existing parameter or object, or
else is a null reference. On the other hand, a weak reference does not
necessarily reference an existing parameter or object.</p>

<h3 id="sec:units-conventions">3.2.4 Units Conventions<a class="headerlink" href="04-index-object-definitions.html#sec:units-conventions" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h3>

<p>For numeric parameters whose values are defined in terms of units, bit
and byte-related units will always refer to powers of 2. For example, a
kilobyte will always be 1024 bytes, a megabyte always 1024 * 1024
bytes, etc.</p>

<h3 id="sec:default-maximum-string-length">3.2.5 Default Maximum String Length<a class="headerlink" href="04-index-object-definitions.html#sec:default-maximum-string-length" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h3>

<p>For string-valued parameters, a maximum length is either explicitly
indicated or implied by the size of the elements composing the string.
For strings in which the content is an enumeration, the longest
enumerated value determines the maximum length. Similarly, for strings
in which the content is a pattern, the longest possible matching value
determines the maximum length. For strings in which the content is a
list, the maximum number of items and the individual item lengths can
help to determine the maximum string length.</p>

<h2 id="sec:vendor-specific-elements">3.3 Vendor-Specific Elements<a class="headerlink" href="04-index-object-definitions.html#sec:vendor-specific-elements" title="Permalink to this header"> <img src='permalink.png' title='' width="0.8em"/></a></h2>

<p>A vendor MAY extend the standardized data model with vendor-specific
elements (parameters, objects, commands, events). Vendor-specific elements MAY be defined either in a separate naming hierarchy or within the standardized
naming hierarchy.</p>

<p>The name of a vendor-specific parameter, object, command, or event that is not contained within another vendor-specific object MUST have the form:</p>

<blockquote>
<p>X_&lt;VENDOR&gt;_VendorSpecificName</p>
</blockquote>

<p>In this definition &lt;VENDOR&gt; is a unique vendor identifier, which MAY
be either an OUI or a domain name. The OUI or domain name used for a
given vendor-specific parameter MUST be one that is assigned to the
organization that defined this parameter (which is not necessarily the
same as the vendor of the Agent). An OUI is an organizationally unique
identifier as defined in <span class="cite" data-citation-ids="OUI"><a href='05-index-normative-references.html#ref-OUI' title=''>[2]</a></span>, which MUST be formatted as a
six-hexadecimal-digit string using all upper-case letters and including
any leading zeros. A domain name MUST be upper case with each dot (&ldquo;.&rdquo;)
replaced with a hyphen or underscore.</p>

<p>The VendorSpecificName MUST NOT contain a &ldquo;.&rdquo; (period) or a space
character.</p>

<blockquote>
<p><em>Note – the use of the string &ldquo;X_&rdquo; to indicate a vendor-specific
parameter implies that no standardized parameter can begin with
&ldquo;X_&rdquo;.</em></p>
</blockquote>

<p>The name of a vendor-specific element that is contained
within another vendor-specific object which itself begins with the
prefix described above need not itself include the prefix.</p>

<p>The full Path Name of a vendor-specific element MUST NOT
exceed 256 characters in length.</p>

<p>Below are some example vendor-specific element names:</p>

<p>A parameter:</p>

<pre><code>Device.UserInterface.X_012345_AdBanner</code></pre>

<p>A single-instance object:</p>

<pre><code>Device.X_EXAMPLE-COM_MyConfig.Status</code></pre>

<p>A command:</p>

<pre><code>Device.X_EXAMPLE-COM_MyCommand()</code></pre>

<p>An event:</p>

<pre><code>Device.X_EXAMPLE-COM_MyEvent!</code></pre>

<p>When appropriate, a vendor MAY also extend the set of values of an
enumeration. If this is done, the vendor-specified values MUST be in the
form &ldquo;X_&lt;VENDOR&gt;_VendorSpecificValue&rdquo;. The total length of such a
string MUST NOT exceed 31 characters.</p>

